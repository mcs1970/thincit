{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/sophos-iaas/xg-azure-aa/master/",
            "metadata": {
                "artifactsBaseUrl": "Base URL of the template package"
            }
        },
	"THIncITbaseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/mcs1970/thincit/mcs1970-thincit-shared/",
            "metadata": {
                "THIncITartifactsBaseUrl": "THIncIT Base URL of the template package"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "fw",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "payg"
            ],
            "metadata": {
                "description": "License type to use."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "netNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Virtual Network or use an existing one."
            }
        },
        "netRG": {
            "type": "string",
            "defaultValue": "WMJPORTAL-RG",
            "metadata": {
                "description": "The resource group of the new network. If using an existing network, this parameter is optional"
            }
        },
        "netName": {
            "type": "string",
            "defaultValue": "wmjportal-vnet",
            "metadata": {
                "description": "Name of the Virtual Network."
            }
        },
        "netPrefix": {
            "type": "string",
            "defaultValue": "10.101.0.0/16",
            "metadata": {
                "description": "Prefix for the Virtual Network."
            }
        },
        "wanName": {
            "type": "string",
            "defaultValue": "dmz-public-wan-sn16",
            "metadata": {
                "description": "Name of the WAN side Subnet."
            }
        },
        "wanPrefix": {
            "type": "string",
            "defaultValue": "10.101.162.96/27",
            "metadata": {
                "description": "Prefix for the WAN side Subnet. Note that each node only requires a single address, so it's recommended to limit subnet size to /24 or smaller."
            }
        },
        "lanName": {
            "type": "string",
            "defaultValue": "dmz-public-lan-sn15",
            "metadata": {
                "description": "Name of the LAN side Subnet."
            }
        },
        "lanPrefix": {
            "type": "string",
            "defaultValue": "10.101.162.64/27",
            "metadata": {
                "description": "Prefix for the LAN side Subnet. Note that each node only requires a single address, so it's recommended to limit subnet size to /24 or smaller."
            }
        },
	"LoadbalancerIntIP": {
            "type": "string",
            "defaultValue": "10.101.162.94",
            "metadata": {
                "description": "IP address for the internal Load Balancer."
            }
        },
	"LoadbalancerIntName": {
            "type": "string",
            "defaultValue": "dmz-lan-lb",
            "metadata": {
                "description": "Name for the internal Load Balancer."
            }
        },
	"LoadbalancerName": {
            "type": "string",
            "defaultValue": "dmz-wan-lb",
            "metadata": {
                "description": "Name for the public Load Balancer."
            }
        },
	"LoadbalancerSku": {
            "type": "string",
            "defaultValue": "Standard",
			"allowedValues": [
                "Basic",
                "Standard"
			],
            "metadata": {
                "description": "Load Balancer Sku."
            }
        },
        "publicIpNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Public IP or use an existing one."
            }
        },
	"publicIpAllocationMethod": {
            "type": "string",
            "defaultValue": "Static",
            "allowedValues": [
                "Static",
                "Dynamic"
            ],
            "metadata": {
                "description": "Determines the Public IP allocation method."
            }
	},
	"publicIpSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Basic"
            ],
            "metadata": {
                "description": "Creates a Standard or Basic Public IP address."
            }
         },
        "publicIpRG": {
            "type": "string",
            "defaultValue": "DMZ-RG",
            "metadata": {
                "description": "Resource Group of existing Public IP (optional)."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "dmz-pip",
            "metadata": {
                "description": "Name of the Public IP."
            }
        },
        "publicIpDNS": {
            "type": "string",
			"defaultValue": "dmz",
            "metadata": {
                "description": "Unique DNS name prefix for Public IP. Value iqnored if using an existing Public IP"
            }
        },
        "storageNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Storage Account or use an existing one."
            }
        },
        "storageRG": {
            "type": "string",
            "defaultValue": "DMZ-RG",
            "metadata": {
                "description": "Resource Group of existing Storage Account (optional)."
            }
        },
        "storageName": {
            "type": "string",
			"defaultValue": "wmjdmzstor",
            "metadata": {
                "description": "Unique name for Storage Account."
            }
        },
        "storageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication mode for Storage Account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().Location]",
            "metadata": {
                "description": "Geo-Location you want to deploy to."
            }
        },
        "nicWan": {
            "type": "string",
            "defaultValue": "nic-wan",
            "metadata": {
                "description": "Network Interface Name for WAN Zone"
            }
        },
        "nicLan": {
            "type": "string",
            "defaultValue": "nic-lan",
            "metadata": {
                "description": "Network Interface Name for LAN Zone"
            }
        },
	"nicMgmt": {
            "type": "string",
            "defaultValue": "nic-mgmt",
            "metadata": {
                "description": "Network Interface Name for Management in WAN Zone"
            }
        },
        "networkSecurityGroupNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Network Security Group or use an existing one."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "dmz-nsg",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "trustedNetwork": {
            "type": "string",
            "defaultValue": "*",
            "metadata": {
                "description": "Trusted network for admin access. Using * will allow traffic from everywhere; using a CIDR notation, e.g., 203.0.113.0/24, will only allow traffic from that network range."
            }
        },
        "availabilitySetNewOrExisting": {
            "type": "string",
            "defaultValue": "existing",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Availability Set or use an existing one."
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "dmz-as",
            "metadata": {
                "description": "Name of the Availability Set"
            }
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 1,
            "maxValue": 5,
            "metadata": {
                "description": "Number of XG Firewall instances to be deployed."
            }
        },
	"automationAccountNewOrExisting": {
		"type": "string",
		"defaultValue": "new",
		"allowedValues": [
			"new",
			"existing"
		],
		"metadata": {
			"description": "Create a new Azure Automation account or select an existing account to use for XG automation. WARNING: Automation account names are unique, so reusing an account name when creating a new account will overwirte the existing account!."
		}
	},
	"automationAccountName": {
		"type": "string",
		"defaultValue": "AzAutomation",
		"metadata": {
			"description": "Enter the name of the Azure Automation account you wish to use / create. Note that when creating a new account the account name must be between 6 to 50 characters, and can contain only letters, numbers, and hyphens."
		}
	},
	"automationAccountLocation": {
		"type": "string",
		"defaultValue": "EastUS2",
		"metadata": {
			"description": "Enter the location for the Azure Automation account you wish to use / create. Note that not all regions support Automation Accounts"
		}
	}
    },
    "variables": {
        "publicIpTemplate": "[concat(parameters('baseUrl'),'/shared/publicip-',parameters('publicIpNewOrExisting'),'.json')]",
        "netTemplate": "[concat(parameters('baseUrl'),'/shared/vnet-',parameters('netNewOrExisting'),'.json')]",
        "storageTemplate": "[concat(parameters('baseUrl'),'/shared/storageAccount-',parameters('storageNewOrExisting'),'.json')]",
        "availabilitySetTemplate": "[concat(parameters('baseUrl'),'/shared/availabilitySet-',parameters('availabilitySetNewOrExisting'),'.json')]",
        "networkSecurityGroupTemplate": "[concat(parameters('baseUrl'),'/shared/networkSecurityGroup-',parameters('networkSecurityGroupNewOrExisting'),'.json')]",
        "interfaceWanTemplate": "[concat(parameters('baseUrl'),'/shared/interface-wan.json')]",
        "interfaceLanTemplate": "[concat(parameters('baseUrl'),'/shared/interface-lan.json')]",
        "interfaceLBTemplate": "[concat(parameters('baseUrl'),'/shared/interface-lb.json')]",
		"interfaceLBIntTemplate": "[concat(parameters('baseUrl'),'/shared/interface-lbint.json')]",
        "vmTemplate": "[concat(parameters('THIncITbaseUrl'),'/vm.json')]",
        "LBTemplate": "[concat(parameters('THIncITbaseUrl'),'/loadbalancer.json')]",
		"LBIntTemplate": "[concat(parameters('THIncITbaseUrl'),'/loadbalancerint.json')]",
        "securityRuleAllowHTTPTemplate": "[concat(parameters('baseUrl'),'/shared/inboundSecurityRuleAllowHttp.json')]",
        "apiVersion": {
            "resources": {
                "deployments": "2017-08-01"
            }
        },
	"accountTemplate": "[concat(parameters('baseUrl'),'/shared/AAAccountTemplate-', parameters('automationAccountNewOrExisting'),'.json')]",
	"lanNetwork": "[substring(parameters('lanPrefix'),0,sub(length(parameters('lanPrefix')), 4))]",
	"wanNetwork": "[substring(parameters('wanPrefix'),0,sub(length(parameters('wanPrefix')), 4))]"
    },
    "resources": [
        {
            "name": "SettingUpAvailabilitySet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('availabilitySetTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "availabilitySetName": {
                        "value": "[parameters('availabilitySetName')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageName')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageType')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('storageRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpNetworkSecurityGroup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('networkSecurityGroupTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[parameters('networkSecurityGroupName')]"
                    },
                    "trustedNetwork": {
                        "value": "[parameters('trustedNetwork')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpSecurityRuleAllowHTTP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('securityRuleAllowHTTPTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[parameters('networkSecurityGroupName')]"
                    },
                    "trustedNetwork": {
                        "value": "*"
                    }
                }
            }
        },
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIpTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIPAddressName": {
                        "value": "[parameters('publicIpName')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIpDNS')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('publicIpRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('netTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('netName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('netPrefix')]"
                    },
                    "Subnet1Name": {
                        "value": "[parameters('wanName')]"
                    },
                    "Subnet1Prefix": {
                        "value": "[parameters('wanPrefix')]"
                    },
                    "Subnet2Name": {
                        "value": "[parameters('lanName')]"
                    },
                    "Subnet2Prefix": {
                        "value": "[parameters('lanPrefix')]"
                    },
                    "vnetExistingRGName": {
                        "value": "[parameters('netRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpLoadbalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('LBTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIpId": {
                        "value": "[reference('SettingUpPublicIP').outputs.publicIpId.value]"
                    },
                    "loadBalancerName": {
                        "value": "[parameters('LoadbalancerName')]"
                    },
					"loadBalancerIntName": {
                        "value": "[parameters('LoadbalancerIntName')]"
                    },
					"loadBalancerSku": {
						"value": "[parameters('loadBalancerSku')]"
					},
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpInterfaceWan', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "InterfaceWanLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpLoadbalancer')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLBTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[concat(parameters('nicWan'),'-', copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet1Ref.value]"
                    },
                    "lbBackendID": {
                        "value": "[reference('SettingUpLoadbalancer').outputs.lbBackendID.value]"
                    },
                    "inboundNatID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatIDPrefix.value, copyIndex())]"
                    },
                    "inboundNatSshID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatSshIDPrefix.value, copyIndex())]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[reference('SettingUpNetworkSecurityGroup','2015-01-01').outputs.networkSecurityGroupName.value]"
                    }
                }
            }
        },
		{
            "name": "[concat('SettingUpInterfaceMgmt', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "InterfaceMgmtLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpLoadbalancer')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLBTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[concat(parameters('nicMgmt'),'-', copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet1Ref.value]"
                    },
                    "lbBackendID": {
                        "value": "[reference('SettingUpLoadbalancer').outputs.lbBackendID.value]"
                    },
                    "inboundNatID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatIDPrefix.value, copyIndex())]"
                    },
                    "inboundNatSshID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatSshIDPrefix.value, copyIndex())]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[reference('SettingUpNetworkSecurityGroup','2015-01-01').outputs.networkSecurityGroupName.value]"
                    }
                }
            }
        },
        {
            "name": "SettingUpIntLoadbalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('LBIntTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
                    },
					"privateIP": {
                        "value": "[parameters('LoadbalancerIntIP')]"
                    },
					"loadBalancerName": {
                        "value": "[parameters('LoadbalancerIntName')]"
                    },
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpInterfaceLan', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "InterfaceLanLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLBIntTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[concat(parameters('nicLan'),'-', copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
                    },
					"lbBackendID": {
                        "value": "[reference('SettingUpIntLoadbalancer').outputs.lbBackendID.value]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpVm', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "VmLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceWan', copyIndex())]",
				"[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceMgmt', copyIndex())]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceLan', copyIndex())]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpAvailabilitySet')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(parameters('vmName'),'-', copyIndex())]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "imageSku": {
                        "value": "[parameters('imageSku')]"
                    },
                    "availabilitySetId": {
                        "value": "[reference('SettingUpAvailabilitySet').outputs.availabilitySetId.value]"
                    },
                    "storageAccountEndpoint": {
                        "value": "[reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value]"
                    },
					"interfaceRefWan": {
                        "value": "[reference(concat('SettingUpInterfaceWan', copyIndex()),'2015-01-01').outputs.interfaceRef.value]"
                    },
					"interfaceRefMgmt": {
                        "value": "[reference(concat('SettingUpInterfaceMgmt', copyIndex()),'2015-01-01').outputs.interfaceRef.value]"
                    },
                    "interfaceRefLan": {
                        "value": "[reference(concat('SettingUpInterfaceLan', copyIndex()),'2015-01-01').outputs.interfaceRef.value]"
                    }
                }
            }
        },
		{
			"name": "SettingUpAutomationAccount",
			"apiVersion": "2015-01-01",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[variables('accountTemplate')]",
					"contentVersion": "1.0"
				},
				"parameters": {
					"accountName": {
						"value": "[parameters('automationAccountName')]"
					},
					"accountLocation": {
						"value": "[parameters('automationAccountLocation')]"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('automationAccountName'),'/RunbookJob',copyIndex())]",
			"type": "Microsoft.Automation/automationAccounts/jobs",
			"apiVersion": "2017-05-15-preview",
			"copy": {
                "name": "JobLoop",
                "count": "[parameters('numberOfInstances')]"
            },
			"dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'SettingUpAutomationAccount')]",
				"[concat('Microsoft.Resources/deployments/', 'SettingUpVm', copyIndex())]"
			],
			"properties": {
				"runbook": {
				"name": "[reference('SettingUpAutomationAccount').outputs.runbookRef.value]"
				},
				"parameters": {
					"password": "[parameters('adminPassword')]",
					"portagw": "[concat(variables('lanNetwork'),'1')]",
					"portbgw": "[concat(variables('wanNetwork'),'1')]",
                    "hostname": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
					"sshport": "[copyIndex(2222)]"
				}
			}
		}
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
            "type": "string"
        }
    }
}
